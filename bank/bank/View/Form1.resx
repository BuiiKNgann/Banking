<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAN4AAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCABBAdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwD2Wik3D1H50bh6igBaKNw9RQTjqRQAUUm4eo/Ol3D1FABRRQTjqRQAUVB9stt+zz4t
        393eM1MCD0NA2mt0LRRuHqKM5oEFFGcUbh6igAoooJx3FABRUBvLYPsM8Qb0LjNTAhuhoG4tboWiims6
        oCWYADuT0oEOoqKO5hk4jlRj6KwNS5oG01uFFFGQO4oEFFGc9xRQAUUbh6iigAooooAKKKKACiiigAoo
        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
</value>
  </data>
</root>